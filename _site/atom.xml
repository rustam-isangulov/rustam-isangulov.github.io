<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>blog</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2022-06-28T14:17:22+01:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>Creating an elementary spring web app and deplying it in a Multipass Docker environment</title>
   <link href="http://localhost:4000/2022/06/27/html-is-possible"/>
   <updated>2022-06-27T12:11:27+01:00</updated>
   <id>http://localhost:4000/2022/06/27/html-is-possible</id>
   <content type="html">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;
&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;en&quot; xml:lang=&quot;en&quot;&gt;
&lt;head&gt;
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=utf-8&quot; /&gt;
&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot; /&gt;
&lt;title&gt;Creating an elementary spring web app and deploying it in a Multipass Docker enviroment.&lt;/title&gt;
&lt;meta name=&quot;generator&quot; content=&quot;Org mode&quot; /&gt;
&lt;meta name=&quot;author&quot; content=&quot;Rustam Isangulov&quot; /&gt;
&lt;style&gt;pre.src{ background:#343131;color:lightgray;padding: 1rem; border: 1px solid #aeb0b5;border-radius: 0.1875em;margin-top:1rem;margin-bottom:1rem;} ul {padding-left: 2em;} h1, h2, h3, h4, h5 {padding-top: 1rem; padding-bottom:1rem;} hr {margin-top:2rem; margin-bottom:2rem; border-style:inset; border-width:1px;} img {padding-top:1rem; padding-bottom:1rem;}&lt;/style&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
// @license magnet:?xt=urn:btih:e95b018ef3580986a04669f1b5879592219e2a7a&amp;dn=public-domain.txt Public Domain
&lt;!--/*--&gt;&lt;![CDATA[/*&gt;&lt;!--*/
     function CodeHighlightOn(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.add(&quot;code-highlighted&quot;);
         target.classList.add(&quot;code-highlighted&quot;);
       }
     }
     function CodeHighlightOff(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.remove(&quot;code-highlighted&quot;);
         target.classList.remove(&quot;code-highlighted&quot;);
       }
     }
    /*]]&gt;*///--&gt;
// @license-end
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id=&quot;content&quot;&gt;
&lt;p&gt;
Toolkit: macOS | &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;InelliJ IDEA&lt;/a&gt; | &lt;a href=&quot;https://www.docker.com/products/docker-desktop/&quot;&gt;Docker Desktop&lt;/a&gt; | &lt;a href=&quot;https://multipass.run&quot;&gt;Multipass&lt;/a&gt;
&lt;/p&gt;

&lt;div id=&quot;outline-container-org3a84c0c&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org3a84c0c&quot;&gt;Review the structure of a static spring web app&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org3a84c0c&quot;&gt;

&lt;div id=&quot;org6ec89f6&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/MVCElementary.png&quot; alt=&quot;MVCElementary.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;



&lt;div id=&quot;orgf60c858&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/MVCElementarySeq.png&quot; alt=&quot;MVCElementarySeq.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1c95e73&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org1c95e73&quot;&gt;Create a basic spring web app&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org1c95e73&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org62917c9&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org62917c9&quot;&gt;Create spring project with &lt;i&gt;spring initializr&lt;/i&gt;&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org62917c9&quot;&gt;
&lt;p&gt;
Navigate to &lt;a href=&quot;https:start.spring.io&quot;&gt;https:start.spring.io&lt;/a&gt; and select fowllowing options:
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;b&gt;Project&lt;/b&gt;: Maven Project&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Language&lt;/b&gt;: Java&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Spring Boot&lt;/b&gt;: 2.7.1&lt;/li&gt;
&lt;li&gt;Project Metadata:
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;b&gt;Artifact&lt;/b&gt;: &quot;springboot_ elementary&quot;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Descripton&lt;/b&gt;: &quot;Elementary project for Spring Boot&quot;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Packaging&lt;/b&gt;: Jar&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Java&lt;/b&gt;: 11&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Dependencies&lt;/b&gt;: Spring Web&lt;/li&gt;
&lt;/ul&gt;



&lt;div id=&quot;orgf92465b&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/SpringBootElem-Initializr.jpg&quot; alt=&quot;SpringBootElem-Initializr.jpg&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Use &lt;b&gt;&quot;GENERATE&quot;&lt;/b&gt; button to download an archive with the new project. Unzip the archive and move &lt;code&gt;springboot_ elementary&lt;/code&gt; folder to a development area.
&lt;/p&gt;

&lt;p&gt;
Open the new project with &lt;b&gt;&lt;i&gt;IntelliJ&lt;/i&gt;&lt;/b&gt; and let dependencies to be downloaded. Specify run configuration with application name and main class through &lt;code&gt;Run -&amp;gt; Run...&lt;/code&gt; menu as follows.
&lt;/p&gt;


&lt;div id=&quot;orge55e902&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/SpringBootElem-Project.jpg&quot; alt=&quot;SpringBootElem-Project.jpg&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Now you can build and run the app using &lt;b&gt;&lt;i&gt;IntelliJ&lt;/i&gt;&lt;/b&gt;, for example using &lt;code&gt;Run -&amp;gt; Run&lt;/code&gt; or &lt;code&gt;Build -&amp;gt; Build Project&lt;/code&gt; menus.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgad82fa5&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgad82fa5&quot;&gt;Add controller class&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgad82fa5&quot;&gt;
&lt;p&gt;
Create a new package &lt;code&gt;controllers&lt;/code&gt; under &lt;code&gt;com.example.springboot_elementary&lt;/code&gt; folder. Add &lt;code&gt;HomeController&lt;/code&gt; class in this package as follows.
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Controller&lt;/span&gt;
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;HomeController&lt;/span&gt; {

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@GetMapping&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;/&quot;&lt;/span&gt;)
    &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;home&lt;/span&gt;() {
        &lt;span style=&quot;color: #C678DD;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;home.html&quot;&lt;/span&gt;;
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgefcf854&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgefcf854&quot;&gt;Add static html source&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgefcf854&quot;&gt;
&lt;p&gt;
Create a new &lt;code&gt;home.html&lt;/code&gt; file under &lt;code&gt;src/main/resources/static&lt;/code&gt; folder with the following content.
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-html&quot;&gt;&amp;lt;&lt;span style=&quot;color: #C678DD;&quot;&gt;!DOCTYPE&lt;/span&gt; html&amp;gt;
&amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;html&lt;/span&gt; &lt;span style=&quot;color: #D19A66;&quot;&gt;lang&lt;/span&gt;=&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;en&quot;&lt;/span&gt;  &lt;span style=&quot;color: #D19A66;&quot;&gt;xmlns&lt;/span&gt;=&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;http://www.w3.org/1999/xhtml&quot;&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;head&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color: #D19A66;&quot;&gt;charset&lt;/span&gt;=&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;span style=&quot;font-weight: bold; text-decoration: underline;&quot;&gt;Spring web app&lt;/span&gt;&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;title&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;head&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;body&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;span style=&quot;font-weight: bold; font-style: italic; text-decoration: underline;&quot;&gt;Home page for the Spring web app...&lt;/span&gt;&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;h2&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;html&lt;/span&gt;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org01e8798&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org01e8798&quot;&gt;Add controller test class&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org01e8798&quot;&gt;
&lt;p&gt;
Create a new package &lt;code&gt;controllers&lt;/code&gt; in &lt;code&gt;src/test/java/com.example.springboot_elementary&lt;/code&gt;. Add &lt;code&gt;HomeControllerTest&lt;/code&gt; class with content as below.
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;additional static imports for MockMvc methods&lt;/span&gt;
&lt;span style=&quot;color: #C678DD;&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #56B6C2;&quot;&gt;org&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;springframework&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;test&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;web&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;servlet&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;request&lt;/span&gt;.MockMvcRequestBuilders.&lt;span style=&quot;color: #E5C07B;&quot;&gt;get&lt;/span&gt;;
&lt;span style=&quot;color: #C678DD;&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #56B6C2;&quot;&gt;org&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;springframework&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;test&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;web&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;servlet&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;result&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;MockMvcResultMatchers&lt;/span&gt;.*;

&lt;span style=&quot;color: #56B6C2;&quot;&gt;@WebMvcTest&lt;/span&gt;(HomeController.&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;HomeControllerTest&lt;/span&gt; {

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;MockMvc&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;mockMvc&lt;/span&gt;;

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;testHomePage&lt;/span&gt;() &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;Exception&lt;/span&gt; {
        mockMvc.perform(get(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;/&quot;&lt;/span&gt;))
                .andExpect(status().isOk())
                .andExpect(view().name(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;home.html&quot;&lt;/span&gt;));
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org3aae9e7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org3aae9e7&quot;&gt;Run the app locally&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org3aae9e7&quot;&gt;
&lt;p&gt;
Now you can build and run the app with the final project structure as follows.
&lt;/p&gt;


&lt;div id=&quot;orga5f2192&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/SpringBootElem-Structure.jpg&quot; alt=&quot;SpringBootElem-Structure.jpg&quot; width=&quot;300&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Run the app with &lt;b&gt;&lt;i&gt;IntelliJ&lt;/i&gt;&lt;/b&gt; using &lt;code&gt;Run -&amp;gt; Run 'springboot_ elementary'&lt;/code&gt; menu. Open a browser and navigate to &lt;code&gt;localhost:8080&lt;/code&gt; to validate that the app is up and running as in the example below.
&lt;/p&gt;


&lt;div id=&quot;orgb3c3aa0&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/SpringBootElem-Safari.jpg&quot; alt=&quot;SpringBootElem-Safari.jpg&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org26c412e&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org26c412e&quot;&gt;Deploy the app as a Docker container locally&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org26c412e&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org159d18c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org159d18c&quot;&gt;Review the structure of a local Docker deployment&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org159d18c&quot;&gt;

&lt;div id=&quot;org887b637&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/MVCElementaryDockerLocal.png&quot; alt=&quot;MVCElementaryDockerLocal.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id=&quot;outline-container-org00ba117&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org00ba117&quot;&gt;Add image name pattern to maven project configuration&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org00ba117&quot;&gt;
&lt;p&gt;
Add image configuration to &lt;code&gt;spring-boot-maven-plugin&lt;/code&gt; in &lt;code&gt;pom.xml&lt;/code&gt;, and &lt;b&gt;re-Load Maven Changes&lt;/b&gt; as follows.This is to set the name template for docker images.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-html&quot;&gt;&amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;build&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;plugins&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;plugin&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;org.springframework.boot&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;spring-boot-maven-plugin&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;configuration&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;image&lt;/span&gt;&amp;gt; &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;name&lt;/span&gt;&amp;gt;${project.artifactId}:${project.version}&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;name&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;image&lt;/span&gt;&amp;gt;
      &amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;configuration&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;plugin&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;plugins&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;build&lt;/span&gt;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgf8d9167&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgf8d9167&quot;&gt;Create a Docker image&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgf8d9167&quot;&gt;
&lt;p&gt;
Launch Docker Desktop app.
&lt;/p&gt;


&lt;div id=&quot;org7eb2195&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/SpringBootElem-DockerDesktop.jpg&quot; alt=&quot;SpringBootElem-DockerDesktop.jpg&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Switch to &lt;code&gt;Terminal&lt;/code&gt; panel in &lt;b&gt;&lt;i&gt;IntelliJ&lt;/i&gt;&lt;/b&gt; through &lt;code&gt;View -&amp;gt; Tool Windows -&amp;gt; Terminal&lt;/code&gt;. Run image building script as follows.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% ./mvnw spring-boot:build-image
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Check that the docker image has been created.
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% docker image list springboot_elementary
REPOSITORY              TAG              IMAGE ID       CREATED        SIZE
springboot_elementary   0.0.1-SNAPSHOT   d24fd8f3e812   42 years ago   262MB
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;i&gt;Note: on the question of '42 years ago' refer here &lt;a href=&quot;https://buildpacks.io/docs/features/reproducibility/&quot;&gt;https://buildpacks.io/docs/features/reproducibility/&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org78dce19&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org78dce19&quot;&gt;Run the app as a local docker container&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org78dce19&quot;&gt;
&lt;p&gt;
Run the newly created docker image as follows.
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% docker run -p8090:8080 springboot_elementary:0.0.1-SNAPSHOT
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;i&gt;Note: use &lt;code&gt;Ctrl-C&lt;/code&gt; to stop the process inside &lt;code&gt;Terminal&lt;/code&gt; tab.&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;
Validate the app is up and running by navigating to &lt;code&gt;localhost:8090&lt;/code&gt; address in your browser.
&lt;/p&gt;

&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org18e1374&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org18e1374&quot;&gt;Deploy the app as a Multipass Docker container&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org18e1374&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org8c56a85&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org8c56a85&quot;&gt;Review the structure of a Multipass Docker deployment&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org8c56a85&quot;&gt;

&lt;div id=&quot;org07b3382&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/MVCElementaryDockerMultipass.png&quot; alt=&quot;MVCElementaryDockerMultipass.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orge2ec30f&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orge2ec30f&quot;&gt;Create Multipass Docker instance&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orge2ec30f&quot;&gt;
&lt;p&gt;
Launch Multipass VM with a Docker instance using the following command inside the &lt;code&gt;Terminal&lt;/code&gt; tab.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% multipass launch docker
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Check the running docker instance with the followoing command. Note instance's IP address.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% multipass info docker
Name:           docker
State:          Running
IPv4:           192.168.64.3
                172.17.0.1
Release:        Ubuntu 21.10
Image hash:     d5ebdea3522c (Ubuntu 21.10)
Load:           0.26 0.62 0.33
Disk usage:     2.4G out of 38.6G
Memory usage:   210.7M out of 3.8G
Mounts:         --
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orge26b84f&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orge26b84f&quot;&gt;Copy docker image to Multipass Docker instance&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orge26b84f&quot;&gt;
&lt;p&gt;
Create a &lt;code&gt;tar&lt;/code&gt; archive of the docker image from local Docker Desktop instance by running the following command.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% docker save -o springboot_elementary.tar springboot_elementary
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Check that the image archive has been created.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% ls *.tar
springboot_elementary.tar
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Transfer the archive to Multipass Docker instance using the command below.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% multipass transfer springboot_elementary.tar docker:/home/ubuntu/springboot_elementary.tar
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Check if the file has been trasferred to a home directory of the multipass docker instance.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% multipass exec docker ls
springboot_elementary.tar
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org58d9453&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org58d9453&quot;&gt;Run the app as a Multipass Docker container&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org58d9453&quot;&gt;
&lt;p&gt;
Open command line inside Multupass Docker image with the following command.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% multipass shell docker

ubuntu@docker:~$
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;i&gt;Note: to exit from the multipass instance shell and return back to &lt;b&gt;&lt;i&gt;IntelliJ&lt;/i&gt;&lt;/b&gt; &lt;code&gt;Terminal&lt;/code&gt; use &lt;code&gt;exit&lt;/code&gt; command.&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;
Create a docker image from the archive as follows.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;ubuntu@docker:~$ docker load -i springboot_elementary.tar
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Check that the image has been created.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;ubuntu@docker:~$ docker image list
REPOSITORY               TAG              IMAGE ID       CREATED        SIZE
portainer/portainer-ce   latest           7b6e59279c38   6 weeks ago    275MB
springboot_elementary    0.0.1-SNAPSHOT   d24fd8f3e812   42 years ago   262MB
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Now you can run the spring web app as a container inside Multipass VM.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;ubuntu@docker:~$ docker run -p8085:8080 springboot_elementary:0.0.1-SNAPSHOT
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;i&gt;Note: use &lt;code&gt;Ctrl-C&lt;/code&gt; to stop the process inside the terminal.&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;
Navigate browser to the &lt;code&gt;192.168.64.3:8085&lt;/code&gt; address to validate that the web app is up and running.
&lt;/p&gt;


&lt;div id=&quot;orgdef17d4&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/SpringBootElem-SafariUbuntu.jpg&quot; alt=&quot;SpringBootElem-SafariUbuntu.jpg&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</content>
 </entry>
 

</feed>
