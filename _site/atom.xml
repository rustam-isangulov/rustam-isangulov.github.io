<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>blog</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2022-08-02T13:03:53+01:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>Writing integration tests for the ftp utility using &lt;code&gt;MockFtpServer&lt;/code&gt;</title>
   <link href="http://localhost:4000/2022/08/02/java-fundamentals-ftputil-integrationtests"/>
   <updated>2022-08-02T12:11:27+01:00</updated>
   <id>http://localhost:4000/2022/08/02/java-fundamentals-ftputil-integrationtests</id>
   <content type="html">&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;
Toolkit: macOS | &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;InelliJ IDEA&lt;/a&gt; | &lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/&quot;&gt;JUnit 5&lt;/a&gt; | &lt;a href=&quot;https://mockftpserver.org/&quot;&gt;MockFtpServer&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
Sources: &lt;a href=&quot;https://github.com/rustam-isangulov/java.fundamentals&quot;&gt;GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgad583d2&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgad583d2&quot;&gt;Objectives&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgad583d2&quot;&gt;
&lt;p&gt;
Test &lt;a href=&quot;https://rustam-isangulov.github.io/2022/07/30/java-fundamentals-ftputil&quot;&gt;FtpUtility&lt;/a&gt;  workflows against a functioning FTP server.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org4671eb2&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org4671eb2&quot;&gt;Review the structure&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org4671eb2&quot;&gt;

&lt;div id=&quot;orgc86b307&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/ftputil-mockftp-structure.png&quot; alt=&quot;ftputil-mockftp-structure.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;


&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org415ff5c&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org415ff5c&quot;&gt;Final result of running all intergation tests in IntelliJ&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org415ff5c&quot;&gt;

&lt;div id=&quot;org215b877&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/ftputil-mockftpserver-structure.jpg&quot; alt=&quot;ftputil-mockftpserver-structure.jpg&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org0bd4df1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org0bd4df1&quot;&gt;Add dependencies to &lt;code&gt;MockFtpServer&lt;/code&gt; in &lt;code&gt;maven&lt;/code&gt; project&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org0bd4df1&quot;&gt;
&lt;p&gt;
&lt;i&gt;Note: &lt;code&gt;MockFtpServer&lt;/code&gt; uses &lt;code&gt;slf4j&lt;/code&gt; logging library. A dependency to it is added as well (although it is optional).&lt;/i&gt;
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-xml&quot;&gt;&amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;dependencies&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;org.mockftpserver&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;MockFtpServer&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;version&lt;/span&gt;&amp;gt;2.8.0&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;version&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;dependency&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;org.slf4j&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;slf4j-simple&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;version&lt;/span&gt;&amp;gt;1.7.36&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;version&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;dependency&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;dependencies&lt;/span&gt;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org07e612f&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org07e612f&quot;&gt;Configure &lt;code&gt;FakeFtpServer&lt;/code&gt; instance for each intergation test&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org07e612f&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtpClientIntegrationTest&lt;/span&gt; {

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;we will have two files stored on FTP server&lt;/span&gt;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;fileOnePath&lt;/span&gt; = Path.of(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;file_one.json&quot;&lt;/span&gt;);
    &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;fileTwoPath&lt;/span&gt; = Path.of(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;file_two_json&quot;&lt;/span&gt;);
    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;this is content of those files&lt;/span&gt;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;fileOneContent&lt;/span&gt; = &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;{\&quot;id\&quot;:\&quot;1\&quot;,\&quot;approvedSymbol\&quot;:\&quot;AAA\&quot;}&quot;&lt;/span&gt;;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;fileTwoContent&lt;/span&gt; = &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;{\&quot;id\&quot;:\&quot;2\&quot;,\&quot;approvedSymbol\&quot;:\&quot;BBB\&quot;}&quot;&lt;/span&gt;;

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@Nested&lt;/span&gt;
    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Given that an FTP server with accessible content is available&quot;&lt;/span&gt;)
    &lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;testWithFTPServerAvailable&lt;/span&gt; {

        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;we will run the FTP on local host&lt;/span&gt;
        &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;URI&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;server&lt;/span&gt; = URI.create(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;localhost&quot;&lt;/span&gt;);
        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;with /pub/data directory&lt;/span&gt;
        &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;remoteBase&lt;/span&gt; = Path.of(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;/pub/&quot;&lt;/span&gt;);
        &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;dataDir&lt;/span&gt; = Path.of(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;data&quot;&lt;/span&gt;);

        &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FakeFtpServer&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;fakeFtpServer&lt;/span&gt;;

        &lt;span style=&quot;color: #56B6C2;&quot;&gt;@BeforeEach&lt;/span&gt;
        &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;setUp&lt;/span&gt;() {

            &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;setup ftp server&lt;/span&gt;
            fakeFtpServer = &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FakeFtpServer&lt;/span&gt;();

            &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;setup default account&lt;/span&gt;
            &lt;span style=&quot;color: #E5C07B;&quot;&gt;UserAccount&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;anonymous&lt;/span&gt; = &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;UserAccount&lt;/span&gt;();
            anonymous.setPasswordRequiredForLogin(&lt;span style=&quot;color: #56B6C2;&quot;&gt;false&lt;/span&gt;);
            anonymous.setUsername(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;);
            anonymous.setHomeDirectory(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;/&quot;&lt;/span&gt;);

            fakeFtpServer.addUserAccount(anonymous);

            &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;setup sample directory and files structure&lt;/span&gt;
            &lt;span style=&quot;color: #E5C07B;&quot;&gt;FileSystem&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;fileSystem&lt;/span&gt; = &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;UnixFakeFileSystem&lt;/span&gt;();
            fileSystem.add(&lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;DirectoryEntry&lt;/span&gt;(remoteBase.toString()));
            fileSystem.add(&lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FileEntry&lt;/span&gt;
                           (remoteBase.resolve
                            (dataDir.resolve(fileOnePath)).toString()
                            , fileOneContent));
            fileSystem.add(&lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FileEntry&lt;/span&gt;
                           (remoteBase.resolve
                            (dataDir.resolve(fileTwoPath)).toString()
                            , fileTwoContent));

            fakeFtpServer.setFileSystem(fileSystem);
            fakeFtpServer.setSystemName(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Unix&quot;&lt;/span&gt;);

            fakeFtpServer.start();
        }

        &lt;span style=&quot;color: #56B6C2;&quot;&gt;@AfterEach&lt;/span&gt;
        &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;tearDown&lt;/span&gt;() {
            fakeFtpServer.stop();
        }

        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;/* &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;more code&lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt; */&lt;/span&gt;
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orga4f9231&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orga4f9231&quot;&gt;Test &lt;i&gt;connect&lt;/i&gt; + &lt;i&gt;list files in a driectory&lt;/i&gt; workflow&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orga4f9231&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Nested&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;When we connect with a new FtpClient instance&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;testConnected&lt;/span&gt; {

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Then we can list files in a remote directory&quot;&lt;/span&gt;)
    &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;testListOfFiles&lt;/span&gt;() {

        &lt;span style=&quot;color: #C678DD;&quot;&gt;try&lt;/span&gt; (&lt;span style=&quot;color: #E5C07B;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;ftpClient&lt;/span&gt; = FtpClient.getClient(server, &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPClient&lt;/span&gt;())) {

            &lt;span style=&quot;color: #E5C07B;&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPFile&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;files&lt;/span&gt; = ftpClient
                .listFiles(remoteBase.resolve(dataDir));

            assertLinesMatch
                (List.of(fileOnePath.toString(), fileTwoPath.toString())
                 , files.stream().map(FTPFile::getName)
                 .collect(Collectors.toList()));

        } &lt;span style=&quot;color: #C678DD;&quot;&gt;catch&lt;/span&gt; (&lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;e&lt;/span&gt;) {
            &lt;span style=&quot;color: #C678DD;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;RuntimeException&lt;/span&gt;(e);
        }
    }

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;/* &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;more code&lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt; */&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgcf78ede&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgcf78ede&quot;&gt;Test &lt;i&gt;connect&lt;/i&gt; + &lt;i&gt;download all files in a directory&lt;/i&gt; workflow&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgcf78ede&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Then we can download content of all remote files in a directory&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;testDownloadFiles&lt;/span&gt;() {

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;create output streams for the content of remote files&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;Map&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;ByteArrayOutputStream&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;outputStreams&lt;/span&gt; = Map.of
        (fileOnePath, &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;ByteArrayOutputStream&lt;/span&gt;()
         , fileTwoPath, &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;ByteArrayOutputStream&lt;/span&gt;());

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;prepare outputProvider for the ftpClient&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;Function&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;OutputStream&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;outputProvider&lt;/span&gt; = outputStreams::get;

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;prepare reporter (empty)&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;Consumer&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;progressReporter&lt;/span&gt; = message -&amp;gt; {};

    &lt;span style=&quot;color: #C678DD;&quot;&gt;try&lt;/span&gt; (&lt;span style=&quot;color: #E5C07B;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;ftpClient&lt;/span&gt; = FtpClient.getClient(server, &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPClient&lt;/span&gt;())) {

        ftpClient.downloadAllFiles
            (remoteBase.resolve(dataDir), outputProvider, progressReporter);

        &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;downloadedFileOneContent&lt;/span&gt; = outputStreams.get(fileOnePath).toString();
        &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;downloadedFileTwoContent&lt;/span&gt; = outputStreams.get(fileTwoPath).toString();

        assertAll(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Test that downloaded content is matching&quot;&lt;/span&gt;
                  + &lt;span style=&quot;color: #98C379;&quot;&gt;&quot; what was uploaded to the FTP&quot;&lt;/span&gt;
                  , () -&amp;gt; assertLinesMatch
                  (List.of(fileOneContent, fileTwoContent)
                   , List.of(downloadedFileOneContent, downloadedFileTwoContent))
                  );

    } &lt;span style=&quot;color: #C678DD;&quot;&gt;catch&lt;/span&gt; (&lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;e&lt;/span&gt;) {
        &lt;span style=&quot;color: #C678DD;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;RuntimeException&lt;/span&gt;(e);
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org6b05d20&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org6b05d20&quot;&gt;Test &lt;i&gt;connect&lt;/i&gt; + &lt;i&gt;download a single file&lt;/i&gt; workflow&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org6b05d20&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Then we can download content of a remote file&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;testDownloadSingleFile&lt;/span&gt;() {

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;prepare output stream&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;outputStream&lt;/span&gt; = &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;ByteArrayOutputStream&lt;/span&gt;();

    &lt;span style=&quot;color: #C678DD;&quot;&gt;try&lt;/span&gt; (&lt;span style=&quot;color: #E5C07B;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;ftpClient&lt;/span&gt; = FtpClient.getClient(server, &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPClient&lt;/span&gt;())) {

        ftpClient.downloadFile
            (remoteBase.resolve(dataDir).resolve(fileOnePath)
             , outputStream);

        &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;downloadedFileOneContent&lt;/span&gt; = outputStream.toString();

        assertAll(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Test that downloaded content is matching&quot;&lt;/span&gt;
                  + &lt;span style=&quot;color: #98C379;&quot;&gt;&quot; what was uploaded to the FTP&quot;&lt;/span&gt;
                  , () -&amp;gt; assertLinesMatch
                  (List.of(fileOneContent)
                   , List.of(downloadedFileOneContent))
                  );

    } &lt;span style=&quot;color: #C678DD;&quot;&gt;catch&lt;/span&gt; (&lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;e&lt;/span&gt;) {
        &lt;span style=&quot;color: #C678DD;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;RuntimeException&lt;/span&gt;(e);
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgca3d5c1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgca3d5c1&quot;&gt;Test cases for potential failures while interacting with an FTP server&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgca3d5c1&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgcde2488&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgcde2488&quot;&gt;Test the case when an FTP server refuses our attempt to connect&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgcde2488&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org1a406cc&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org1a406cc&quot;&gt;Additional FTP Mock Server configuration for the failure case&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org1a406cc&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Nested&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;When server refuses our attempt to connect&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;connectionIsRefused&lt;/span&gt; {

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@BeforeEach&lt;/span&gt;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;setUp&lt;/span&gt;() {

        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;change response to the next Connect request&lt;/span&gt;
        &lt;span style=&quot;color: #E5C07B;&quot;&gt;ConnectCommandHandler&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;handler&lt;/span&gt; =
            (&lt;span style=&quot;color: #E5C07B;&quot;&gt;ConnectCommandHandler&lt;/span&gt;) fakeFtpServer.getCommandHandler(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Connect&quot;&lt;/span&gt;);
        handler.setReplyCode(534);
        handler.setReplyMessageKey(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Request denied for policy reasons.&quot;&lt;/span&gt;);
        handler.setReplyText(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Request denied for policy reasons.&quot;&lt;/span&gt;);
    }

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@AfterEach&lt;/span&gt;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;resetServer&lt;/span&gt;() {
        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;this is not strictly necessary&lt;/span&gt;
        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;but will help to avoid errors if we switch&lt;/span&gt;
        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;to a single FTP server for all tests&lt;/span&gt;
        fakeFtpServer.setCommandHandler
            (&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Connect&quot;&lt;/span&gt;, &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;ConnectCommandHandler&lt;/span&gt;());
    }

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;/* &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;more code&lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt; */&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id=&quot;outline-container-org5e019df&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org5e019df&quot;&gt;Intergation test for the &lt;i&gt;connect&lt;/i&gt; workflow&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org5e019df&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Then the client throws Unable to connect... exception&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;givenNewlyCreatedFTPClient_whenBadResponseOnConnect_thenException&lt;/span&gt;() {

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;test connect() method&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;Throwable&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;exception&lt;/span&gt; = assertThrows
        (IOException.&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt;
         , () -&amp;gt; FtpClient.getClient(server
                                     , &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPClient&lt;/span&gt;()
                                     , fakeFtpServer.getServerControlPort()
                                     , &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;, &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;&quot;&lt;/span&gt;)
         , () -&amp;gt; &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Return code 534 (not a positive completion)&quot;&lt;/span&gt;
         + &lt;span style=&quot;color: #98C379;&quot;&gt;&quot; should cause an IOException&quot;&lt;/span&gt;);

    assertTrue(exception.getMessage().startsWith(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Unable to connect&quot;&lt;/span&gt;)
               , () -&amp;gt; &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;FtpClient should throw an exception with &quot;&lt;/span&gt; +
               &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;'Unable to connect..' message in case of a negative connect reply&quot;&lt;/span&gt;);
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org98c6652&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org98c6652&quot;&gt;Test the case of trying to login with wrong credentials&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org98c6652&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Nested&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;When we login with a wrong user or password&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;loginIsRefused&lt;/span&gt; {

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Then the client throws Unable to login... exception&quot;&lt;/span&gt;)
    &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;givenNewlyCreatedFTPClient_whenBadUserName_thenException&lt;/span&gt;() {

        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;bad username for the server&lt;/span&gt;
        &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;badUserName&lt;/span&gt; = &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;nonympus&quot;&lt;/span&gt;;

        &lt;span style=&quot;color: #E5C07B;&quot;&gt;Throwable&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;exception&lt;/span&gt; = assertThrows
            (IOException.&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt;
             , () -&amp;gt; FtpClient.getClient(server
                                         , &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPClient&lt;/span&gt;()
                                         , fakeFtpServer.getServerControlPort()
                                         , badUserName, &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;&quot;&lt;/span&gt;)
             , () -&amp;gt; &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Return code 501 (Syntax error...) should cause an IOException&quot;&lt;/span&gt;);

        assertTrue(exception.getMessage().startsWith(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Unable to login&quot;&lt;/span&gt;)
                   , () -&amp;gt; &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;FtpClient should throw an exception with &quot;&lt;/span&gt; +
                   &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;'Unable to login...' message in case of a negative login reply&quot;&lt;/span&gt;);
    }
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;
Thank you.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Writing unit tests for the ftp utility using &lt;code&gt;JUnit 5&lt;/code&gt; and &lt;code&gt;Mockito 4&lt;/code&gt;</title>
   <link href="http://localhost:4000/2022/08/01/java-fundamentals-ftputil-unittests"/>
   <updated>2022-08-01T12:11:27+01:00</updated>
   <id>http://localhost:4000/2022/08/01/java-fundamentals-ftputil-unittests</id>
   <content type="html">&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;
Toolkit: macOS | &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;InelliJ IDEA&lt;/a&gt; | &lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/&quot;&gt;JUnit 5&lt;/a&gt; | &lt;a href=&quot;https://site.mockito.org/&quot;&gt;Mockito 4&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
Sources: &lt;a href=&quot;https://github.com/rustam-isangulov/java.fundamentals&quot;&gt;GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org2302018&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org2302018&quot;&gt;Objectives&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org2302018&quot;&gt;
&lt;p&gt;
Create unit tests for &lt;a href=&quot;https://rustam-isangulov.github.io/2022/07/30/java-fundamentals-ftputil&quot;&gt;FtpUtility&lt;/a&gt; that provide 100% coverage for methods and code lines.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org40b7ec0&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org40b7ec0&quot;&gt;Review the structure&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org40b7ec0&quot;&gt;

&lt;div id=&quot;org50610f3&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/ftputil-structure.png&quot; alt=&quot;ftputil-structure.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org821a978&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org821a978&quot;&gt;Final result of running all unit tests in IntelliJ&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org821a978&quot;&gt;

&lt;div id=&quot;orgb2a15d9&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/ftputil-unittests-result.jpg&quot; alt=&quot;ftputil-unittests-result.jpg&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orge2a85d2&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orge2a85d2&quot;&gt;Add dependecies to &lt;code&gt;JUnit&lt;/code&gt; and &lt;code&gt;Mockito&lt;/code&gt; in &lt;code&gt;maven&lt;/code&gt; project&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orge2a85d2&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org02b7062&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org02b7062&quot;&gt;&lt;code&gt;pom.xml&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org02b7062&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-xml&quot;&gt;&amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;dependencies&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;org.junit.jupiter&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;junit-jupiter-api&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;version&lt;/span&gt;&amp;gt;5.8.2&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;scope&lt;/span&gt;&amp;gt;test&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;scope&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;dependency&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;org.junit.jupiter&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;junit-jupiter-engine&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;version&lt;/span&gt;&amp;gt;5.8.2&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;scope&lt;/span&gt;&amp;gt;test&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;scope&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;dependency&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;org.mockito&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;mockito-junit-jupiter&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;version&lt;/span&gt;&amp;gt;4.5.1&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;version&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;scope&lt;/span&gt;&amp;gt;test&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;scope&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;dependency&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;dependencies&lt;/span&gt;&amp;gt;

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgce82da0&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgce82da0&quot;&gt;Add tests for &lt;code&gt;open(...)&lt;/code&gt; and &lt;code&gt;close(...)&lt;/code&gt; methods&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgce82da0&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org262e006&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org262e006&quot;&gt;Add and initialise &lt;code&gt;FTPClient&lt;/code&gt; and &lt;code&gt;FtpClient&lt;/code&gt; objects&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org262e006&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtpClientUnitTest&lt;/span&gt; {

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@Nested&lt;/span&gt;
    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Test successful ftp connection&quot;&lt;/span&gt;)
    &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;openIfSuccessful&lt;/span&gt; {

        &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPClient&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;mockFTPClient&lt;/span&gt; = mock(FTPClient.&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt;);
        &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtpClient&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;client&lt;/span&gt;;
        &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPFile&lt;/span&gt;[] &lt;span style=&quot;color: #E06C75;&quot;&gt;ftpFiles&lt;/span&gt;;

        &lt;span style=&quot;color: #56B6C2;&quot;&gt;@BeforeEach&lt;/span&gt;
        &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;setUp&lt;/span&gt;() &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

            &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;set up a happy path for connecting / login sequence&lt;/span&gt;
            when(mockFTPClient.getReplyCode())
                .thenReturn(230);
            when(mockFTPClient.login(anyString(), anyString()))
                .thenReturn(&lt;span style=&quot;color: #56B6C2;&quot;&gt;true&lt;/span&gt;);

            client = FtpClient.getClient
                (URI.create(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;localhost&quot;&lt;/span&gt;), mockFTPClient);

            &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;/* &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;more code&lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt; */&lt;/span&gt;
        }
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org4b7243f&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org4b7243f&quot;&gt;Add &lt;code&gt;open(...)&lt;/code&gt; method test&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org4b7243f&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org85ecb8f&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org85ecb8f&quot;&gt;Code to test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org85ecb8f&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;open&lt;/span&gt;
    (&lt;span style=&quot;color: #E5C07B;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;port&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;user&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;password&lt;/span&gt;) &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;connect&lt;/span&gt;
    ftp.connect(server.toString(), port);

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;check for connection failures&lt;/span&gt;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color: #56B6C2; font-weight: bold;&quot;&gt;!&lt;/span&gt;FTPReply.isPositiveCompletion(ftp.getReplyCode())) {
        ftp.disconnect();
        &lt;span style=&quot;color: #C678DD;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt;
            (&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Unable to connect to FTP Server: &quot;&lt;/span&gt; + server
             + &lt;span style=&quot;color: #98C379;&quot;&gt;&quot; port: &quot;&lt;/span&gt; + port);
    }

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;check for login failures&lt;/span&gt;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color: #56B6C2; font-weight: bold;&quot;&gt;!&lt;/span&gt;ftp.login(user, password)) {
        ftp.disconnect();
        &lt;span style=&quot;color: #C678DD;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt;
            (&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Unable to login to FTP Server: &quot;&lt;/span&gt; + server
             + &lt;span style=&quot;color: #98C379;&quot;&gt;&quot; port: &quot;&lt;/span&gt; + port);
    }

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;passive mode to be able to work from inside VMs&lt;/span&gt;
    ftp.enterLocalPassiveMode();

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;now ready to access files and dirs&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgc0c9bb8&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgc0c9bb8&quot;&gt;Unit test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-orgc0c9bb8&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Test open connection sequence for default port/user&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;testFTPOpenDefault&lt;/span&gt;() &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;open connection should have three steps:&lt;/span&gt;
    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;connect to server @ port&lt;/span&gt;
    verify(mockFTPClient).connect(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;localhost&quot;&lt;/span&gt;, 21);
    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;log in with username anonymous and no password&lt;/span&gt;
    verify(mockFTPClient).login(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;, &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;&quot;&lt;/span&gt;);
    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;switch to passive mode to be able to work from VMs&lt;/span&gt;
    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;(behind NATs and port mapping)&lt;/span&gt;
    verify(mockFTPClient).enterLocalPassiveMode();
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgb900234&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgb900234&quot;&gt;Add &lt;code&gt;close(...)&lt;/code&gt; method test&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgb900234&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org9cbad84&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org9cbad84&quot;&gt;Code to test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org9cbad84&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Override&lt;/span&gt;
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;close&lt;/span&gt;() &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {
    ftp.logout();
    ftp.disconnect();
}

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org08994e4&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org08994e4&quot;&gt;Unit test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org08994e4&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Test close sequence&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;testFTPClose&lt;/span&gt;() &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;close (as in Closeable interface)&lt;/span&gt;
    client.close();

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;order of calls verification&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;InOrder&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;inOrder&lt;/span&gt; = inOrder(mockFTPClient);

    inOrder.verify(mockFTPClient).logout();
    inOrder.verify(mockFTPClient).disconnect();
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orga0ba5bf&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga0ba5bf&quot;&gt;Unsuccessful ftp connection behaviour tests for &lt;code&gt;open(...)&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orga0ba5bf&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgef23681&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgef23681&quot;&gt;Connection problem test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-orgef23681&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Nested&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Test unsuccessful open connection cases&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;unsuccessfulCases&lt;/span&gt; {

    &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPClient&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;mockFTPClient&lt;/span&gt; = mock(FTPClient.&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt;);

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Test connect problem behaviour&quot;&lt;/span&gt;)
    &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;testConnectProblem&lt;/span&gt;() &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;set up a troublesome path for the connecting sequence&lt;/span&gt;
        when(mockFTPClient.getReplyCode())
            .thenReturn(534);

        &lt;span style=&quot;color: #E5C07B;&quot;&gt;Throwable&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;ex&lt;/span&gt; = assertThrows
            (IOException.&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt;
             , () -&amp;gt; FtpClient.getClient(URI.create(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;localhost&quot;&lt;/span&gt;), mockFTPClient)
             , () -&amp;gt; &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;FtpClient should throw an exception&quot;&lt;/span&gt; +
             &lt;span style=&quot;color: #98C379;&quot;&gt;&quot; when ftp return code is not positive&quot;&lt;/span&gt;);
    }

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;/* &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;more code&lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt; */&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orge0c153a&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orge0c153a&quot;&gt;Login problem test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-orge0c153a&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Nested&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Test unsuccessful open connection cases&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;unsuccessfulCases&lt;/span&gt; {

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;/* &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;more code&lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt; */&lt;/span&gt;

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Test login problem behaviour&quot;&lt;/span&gt;)
    &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;testLoginProblem&lt;/span&gt;() &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;set up a happy path for the connecting sequence&lt;/span&gt;
        when(mockFTPClient.getReplyCode())
            .thenReturn(230);

        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;but bad response for the login call&lt;/span&gt;
        when(mockFTPClient.login(anyString(), anyString()))
            .thenReturn(&lt;span style=&quot;color: #56B6C2;&quot;&gt;false&lt;/span&gt;);

        &lt;span style=&quot;color: #E5C07B;&quot;&gt;Throwable&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;ex&lt;/span&gt; = assertThrows
            (IOException.&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt;
             , () -&amp;gt; FtpClient.getClient(URI.create(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;localhost&quot;&lt;/span&gt;), mockFTPClient)
             , () -&amp;gt; &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;FtpClient should throw an exception&quot;&lt;/span&gt;
             + &lt;span style=&quot;color: #98C379;&quot;&gt;&quot; when ftp login is not successful&quot;&lt;/span&gt;);
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org639048c&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org639048c&quot;&gt;Add tests for &lt;code&gt;listFiles(...)&lt;/code&gt;, &lt;code&gt;downloadFile(...)&lt;/code&gt; and &lt;code&gt;downloadAllFiles(...)&lt;/code&gt; methods&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org639048c&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgaf0d85c&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgaf0d85c&quot;&gt;Mock file/directory behaviours for the &lt;code&gt;FTPClient&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgaf0d85c&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Nested&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Test successful ftp connection&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;openIfSuccessful&lt;/span&gt; {

    &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPClient&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;mockFTPClient&lt;/span&gt; = mock(FTPClient.&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt;);
    &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtpClient&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;client&lt;/span&gt;;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPFile&lt;/span&gt;[] &lt;span style=&quot;color: #E06C75;&quot;&gt;ftpFiles&lt;/span&gt;;

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@BeforeEach&lt;/span&gt;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;setUp&lt;/span&gt;() &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;/* &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;more code&lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt; */&lt;/span&gt;

        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;setup file content for the mock FTPClient&lt;/span&gt;
        ftpFiles = &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPFile&lt;/span&gt;[2];
        ftpFiles[0] = &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPFile&lt;/span&gt;();
        ftpFiles[0].setName(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;fileOne.txt&quot;&lt;/span&gt;);
        ftpFiles[0].setType(&lt;span style=&quot;color: #56B6C2;&quot;&gt;FTPFile&lt;/span&gt;.FILE_TYPE);
        ftpFiles[1] = &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPFile&lt;/span&gt;();
        ftpFiles[1].setName(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;fileTwo.txt&quot;&lt;/span&gt;);
        ftpFiles[1].setType(&lt;span style=&quot;color: #56B6C2;&quot;&gt;FTPFile&lt;/span&gt;.FILE_TYPE);

        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;mock FTPClient response for the list command&lt;/span&gt;
        when(mockFTPClient.listFiles(anyString()))
            .thenReturn(ftpFiles);

    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orga24e798&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga24e798&quot;&gt;Add &lt;code&gt;listFiles(...)&lt;/code&gt; method test&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orga24e798&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org4481803&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org4481803&quot;&gt;Code to test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org4481803&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPFile&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;listFiles&lt;/span&gt;(&lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;remoteDir&lt;/span&gt;) &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPFile&lt;/span&gt;[] &lt;span style=&quot;color: #E06C75;&quot;&gt;files&lt;/span&gt; = ftp.listFiles(remoteDir.toString());

    &lt;span style=&quot;color: #C678DD;&quot;&gt;return&lt;/span&gt; Arrays.stream(files)
        .collect(Collectors.toList());
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org937a209&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org937a209&quot;&gt;Unit test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org937a209&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Test list files call&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;testFTPListFiles&lt;/span&gt;() &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;get the list through FtpClient&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPFile&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;list&lt;/span&gt; = client.listFiles(Path.of(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;/any/path&quot;&lt;/span&gt;));

    assertLinesMatch(List.of(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;fileOne.txt&quot;&lt;/span&gt;, &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;fileTwo.txt&quot;&lt;/span&gt;)
                     , list.stream()
                     .map(FTPFile::getName)
                     .collect(Collectors.toList()));
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org13c8c1b&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org13c8c1b&quot;&gt;Add &lt;code&gt;downloadFile(...)&lt;/code&gt; method test&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org13c8c1b&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org3c37065&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org3c37065&quot;&gt;Code to test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org3c37065&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;downloadFile&lt;/span&gt;(&lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;remoteFile&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;OutputStream&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;out&lt;/span&gt;) &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {
    ftp.retrieveFile(remoteFile.toString(), out);
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org822bb49&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org822bb49&quot;&gt;Unit test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org822bb49&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Test downloading a file call&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;testFTPDownloadFile&lt;/span&gt;(&lt;span style=&quot;color: #56B6C2;&quot;&gt;@TempDir&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;dataDir&lt;/span&gt;) &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;prepare an output stream to copy file content&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;out&lt;/span&gt; = &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FileOutputStream&lt;/span&gt;
        (dataDir.resolve(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;test.txt&quot;&lt;/span&gt;).toFile());

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;try to download a file with the given path&lt;/span&gt;
    client.downloadFile(Path.of(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;any/path&quot;&lt;/span&gt;), out);

    verify(mockFTPClient).retrieveFile(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;any/path&quot;&lt;/span&gt;, out);
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org0f326a5&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org0f326a5&quot;&gt;Add &lt;code&gt;downloadAllFiles(...)&lt;/code&gt; method test&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org0f326a5&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org3ff8abc&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org3ff8abc&quot;&gt;Code to test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org3ff8abc&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;downloadAllFiles&lt;/span&gt;
    (&lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;remoteDir&lt;/span&gt;
     , &lt;span style=&quot;color: #E5C07B;&quot;&gt;Function&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;OutputStream&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;outputProvider&lt;/span&gt;
     , &lt;span style=&quot;color: #E5C07B;&quot;&gt;Consumer&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;progressReporter&lt;/span&gt;) &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    &lt;span style=&quot;color: #E5C07B;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;files&lt;/span&gt; = ftp.listFiles(remoteDir.toString());

    &lt;span style=&quot;color: #E5C07B;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;filesList&lt;/span&gt; = Arrays.stream(files)
        .filter(FTPFile::isFile)
        .map(FTPFile::getName)
        .collect(Collectors.toList());

    &lt;span style=&quot;color: #C678DD;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #E5C07B;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;i&lt;/span&gt; = 0; i &amp;lt; filesList.&lt;span style=&quot;color: #E5C07B;&quot;&gt;size&lt;/span&gt;(); i++) {
        progressReporter.accept
            (String.format(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Downloading (%d of %d):[%s]&quot;&lt;/span&gt;
                           , i+1, filesList.size(), filesList.get(i)));

        &lt;span style=&quot;color: #C678DD;&quot;&gt;try&lt;/span&gt; (&lt;span style=&quot;color: #E5C07B;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;out&lt;/span&gt; = outputProvider.apply(Path.of(filesList.get(i)))) {
            ftp.retrieveFile(remoteDir.resolve(filesList.get(i)).toString(), out);
        }
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgdd90b01&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgdd90b01&quot;&gt;Unit test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-orgdd90b01&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Test downloadAllFiles call&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;testFTPDownloadAllFiles&lt;/span&gt;() &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;create a simple progress reporter&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;Consumer&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;progressReporter&lt;/span&gt; = mock(Consumer.&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt;);
    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;create order verifier for the progress reporter mock&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;InOrder&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;inOrderReporter&lt;/span&gt; = inOrder(progressReporter);

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;create a simple output stream&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;OutputStream&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;out&lt;/span&gt; = mock(OutputStream.&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt;);
    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;create a simple output provider&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;Function&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;OutputStream&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;outputProvider&lt;/span&gt; = mock(Function.&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt;);
    when(outputProvider.apply(any(Path.&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt;))).thenReturn(out);
    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;create order verifier for the output provider mock&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;InOrder&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;inOrderProvider&lt;/span&gt; = inOrder(outputProvider);

    client.downloadAllFiles
        (Path.of(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;/remote/path&quot;&lt;/span&gt;), outputProvider, progressReporter);

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;check the download sequence&lt;/span&gt;
    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;get a list&lt;/span&gt;
    verify(mockFTPClient).listFiles(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;/remote/path&quot;&lt;/span&gt;);

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;say &quot;I am downloading ...&quot; twice&lt;/span&gt;
    inOrderReporter.verify(progressReporter)
        .accept(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Downloading (1 of 2):[fileOne.txt]&quot;&lt;/span&gt;);
    inOrderReporter.verify(progressReporter)
        .accept(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Downloading (2 of 2):[fileTwo.txt]&quot;&lt;/span&gt;);

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;get output stream to write to... twice&lt;/span&gt;
    inOrderProvider.verify(outputProvider).apply(Path.of(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;fileOne.txt&quot;&lt;/span&gt;));
    inOrderProvider.verify(outputProvider).apply(Path.of(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;fileTwo.txt&quot;&lt;/span&gt;));

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;check if retrieveFile method has been called&lt;/span&gt;
    verify(mockFTPClient).retrieveFile(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;/remote/path/fileOne.txt&quot;&lt;/span&gt;, out);
    verify(mockFTPClient).retrieveFile(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;/remote/path/fileTwo.txt&quot;&lt;/span&gt;, out);
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgc7b529a&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgc7b529a&quot;&gt;Add &lt;code&gt;FtpClient::getClient(...)&lt;/code&gt; test for non-default port and user account&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgc7b529a&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org3aa6951&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;org3aa6951&quot;&gt;Code to test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-org3aa6951&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtpClient&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;getClient&lt;/span&gt;
    (&lt;span style=&quot;color: #E5C07B;&quot;&gt;URI&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;serverAddress&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPClient&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;ftp&lt;/span&gt;
     , &lt;span style=&quot;color: #E5C07B;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;port&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;user&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;password&lt;/span&gt;) &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtpClient&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;client&lt;/span&gt; = &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtpClient&lt;/span&gt;(serverAddress, ftp);

    client.open(port, user, password);

    &lt;span style=&quot;color: #C678DD;&quot;&gt;return&lt;/span&gt; client;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgcbe4737&quot; class=&quot;outline-4&quot;&gt;
&lt;h4 id=&quot;orgcbe4737&quot;&gt;Unit test&lt;/h4&gt;
&lt;div class=&quot;outline-text-4&quot; id=&quot;text-orgcbe4737&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Nested&lt;/span&gt;
&lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;When connecting with non-default port and user&quot;&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;connectDetailed&lt;/span&gt; {

    &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPClient&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;mockFTPClient&lt;/span&gt; = mock(FTPClient.&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt;);

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@DisplayName&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Test open connection sequence with port / user / password&quot;&lt;/span&gt;)
    &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;testFTPOpenDetailed&lt;/span&gt;() &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;set up a happy path for connecting / login sequence&lt;/span&gt;
        when(mockFTPClient.getReplyCode())
            .thenReturn(230);
        when(mockFTPClient.login(any(), any()))
            .thenReturn(&lt;span style=&quot;color: #56B6C2;&quot;&gt;true&lt;/span&gt;);

        &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtpClient&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;client&lt;/span&gt; = FtpClient.getClient
            (URI.create(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;ftp.server&quot;&lt;/span&gt;), mockFTPClient
             , 22, &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;userOne&quot;&lt;/span&gt;, &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;passwordSecret&quot;&lt;/span&gt;);


        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;open connection should have three steps:&lt;/span&gt;
        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;connect to server @ port&lt;/span&gt;
        verify(mockFTPClient).connect(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;ftp.server&quot;&lt;/span&gt;, 22);
        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;log in with username anonymous and no password&lt;/span&gt;
        verify(mockFTPClient).login(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;userOne&quot;&lt;/span&gt;, &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;passwordSecret&quot;&lt;/span&gt;);
        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;switch to passive mode to be able to work from VMs&lt;/span&gt;
        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;(behind NATs and port mapping)&lt;/span&gt;
        verify(mockFTPClient).enterLocalPassiveMode();
    }
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;
Thank you.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Creating an ftp utility using Apache Commons &lt;code&gt;FTPClient&lt;/code&gt;</title>
   <link href="http://localhost:4000/2022/07/30/java-fundamentals-ftputil"/>
   <updated>2022-07-30T12:11:27+01:00</updated>
   <id>http://localhost:4000/2022/07/30/java-fundamentals-ftputil</id>
   <content type="html">&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;
Toolkit: macOS | &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;InelliJ IDEA&lt;/a&gt; | &lt;a href=&quot;https://commons.apache.org/proper/commons-net/&quot;&gt;Apache Commons Net&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
Sources: &lt;a href=&quot;https://github.com/rustam-isangulov/java.fundamentals&quot;&gt;GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org37d94e0&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org37d94e0&quot;&gt;Objectives&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org37d94e0&quot;&gt;
&lt;p&gt;
Create a utility to:
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;download multiple(all) files from a directory on an ftp server&lt;/li&gt;
&lt;li&gt;work from inside container/VM environments&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;i&gt;Note: for the second objective &lt;code&gt;FTPClient&lt;/code&gt; should be switched to &lt;b&gt;local passive mode&lt;/b&gt;, see &lt;code&gt;open(...)&lt;/code&gt; method for details.&lt;/i&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgde3cbdc&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orgde3cbdc&quot;&gt;Review the structure&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orgde3cbdc&quot;&gt;

&lt;div id=&quot;org1f0106b&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/ftputil-structure.png&quot; alt=&quot;ftputil-structure.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org644ba1d&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org644ba1d&quot;&gt;Add dependecies to Apache Commons in &lt;code&gt;maven&lt;/code&gt; project&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org644ba1d&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org6277511&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org6277511&quot;&gt;&lt;code&gt;pom.xml&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org6277511&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-xml&quot;&gt;&amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;dependencies&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;dependency&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;commons-net&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;commons-net&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;version&lt;/span&gt;&amp;gt;3.8.0&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;version&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;dependency&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;dependencies&lt;/span&gt;&amp;gt;

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org88760b3&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org88760b3&quot;&gt;Add create instance and open connection logic&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org88760b3&quot;&gt;
&lt;p&gt;
In this section we will add content for open/close connection method, constructor and instance factory methods.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org401515b&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org401515b&quot;&gt;&lt;code&gt;open(...)&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org401515b&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;open&lt;/span&gt;(&lt;span style=&quot;color: #E5C07B;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;port&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;user&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;password&lt;/span&gt;) &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;connect&lt;/span&gt;
    ftp.connect(server.toString(), port);

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;check for connection failures&lt;/span&gt;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color: #56B6C2; font-weight: bold;&quot;&gt;!&lt;/span&gt;FTPReply.isPositiveCompletion(ftp.getReplyCode())) {
        ftp.disconnect();
        &lt;span style=&quot;color: #C678DD;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt;
            (&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Unable to connect to FTP Server: &quot;&lt;/span&gt; + server
             + &lt;span style=&quot;color: #98C379;&quot;&gt;&quot; port: &quot;&lt;/span&gt; + port);
    }

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;check for login failures&lt;/span&gt;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;if&lt;/span&gt; (&lt;span style=&quot;color: #56B6C2; font-weight: bold;&quot;&gt;!&lt;/span&gt;ftp.login(user, password)) {
        ftp.disconnect();
        &lt;span style=&quot;color: #C678DD;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt;
            (&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Unable to login to FTP Server: &quot;&lt;/span&gt; + server
             + &lt;span style=&quot;color: #98C379;&quot;&gt;&quot; port: &quot;&lt;/span&gt; + port);
    }

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;passive mode to be able to work from inside VMs&lt;/span&gt;
    ftp.enterLocalPassiveMode();

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;now ready to access files and dirs&lt;/span&gt;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org7ce3ae7&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org7ce3ae7&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org7ce3ae7&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Override&lt;/span&gt;
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;close&lt;/span&gt;() &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {
    ftp.logout();
    ftp.disconnect();
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org85215df&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org85215df&quot;&gt;&lt;code&gt;FtpClient(...)&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org85215df&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;FtpClient&lt;/span&gt;(&lt;span style=&quot;color: #E5C07B;&quot;&gt;URI&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;serverAddress&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPClient&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;ftp&lt;/span&gt;) {
    &lt;span style=&quot;color: #C678DD;&quot;&gt;this&lt;/span&gt;.server = serverAddress;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;this&lt;/span&gt;.ftp = ftp;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgea1c41b&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgea1c41b&quot;&gt;&lt;code&gt;getClient(...)&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgea1c41b&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtpClient&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;getClient&lt;/span&gt;
    (&lt;span style=&quot;color: #E5C07B;&quot;&gt;URI&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;serverAddress&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPClient&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;ftp&lt;/span&gt;) &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;default port&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;port&lt;/span&gt; = 21;
    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;username for public access data&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;user&lt;/span&gt; = &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;anonymous&quot;&lt;/span&gt;;
    &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;password for anonymous users&lt;/span&gt;
    &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;password&lt;/span&gt; = &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;&quot;&lt;/span&gt;;

    &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtpClient&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;client&lt;/span&gt; = &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtpClient&lt;/span&gt;(serverAddress, ftp);

    client.open(port, user, password);

    &lt;span style=&quot;color: #C678DD;&quot;&gt;return&lt;/span&gt; client;
}

&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtpClient&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;getClient&lt;/span&gt;
    (&lt;span style=&quot;color: #E5C07B;&quot;&gt;URI&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;serverAddress&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPClient&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;ftp&lt;/span&gt;
     , &lt;span style=&quot;color: #E5C07B;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;port&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;user&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;password&lt;/span&gt;) &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtpClient&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;client&lt;/span&gt; = &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtpClient&lt;/span&gt;(serverAddress, ftp);

    client.open(port, user, password);

    &lt;span style=&quot;color: #C678DD;&quot;&gt;return&lt;/span&gt; client;
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org3d9420e&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org3d9420e&quot;&gt;List files in a remote directory&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org3d9420e&quot;&gt;
&lt;p&gt;
In this section we will add the logic to retrieve a list of files in a remote directory.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orga027393&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orga027393&quot;&gt;&lt;code&gt;listFiles(...)&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orga027393&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPFile&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;listFiles&lt;/span&gt;(&lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;remoteDir&lt;/span&gt;) &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPFile&lt;/span&gt;[] &lt;span style=&quot;color: #E06C75;&quot;&gt;files&lt;/span&gt; = ftp.listFiles(remoteDir.toString());

    &lt;span style=&quot;color: #C678DD;&quot;&gt;return&lt;/span&gt; Arrays.stream(files)
        .collect(Collectors.toList());
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orga6f6f3f&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;orga6f6f3f&quot;&gt;Download remote files&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-orga6f6f3f&quot;&gt;
&lt;p&gt;
In this section we will add content for remote files downloading methods, both single file and multple files versions.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org149a8f9&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org149a8f9&quot;&gt;&lt;code&gt;downloadFile(...)&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org149a8f9&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;downloadFile&lt;/span&gt;
    (&lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;remoteFile&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;OutputStream&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;out&lt;/span&gt;) &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    ftp.retrieveFile(remoteFile.toString(), out);
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org84ef305&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org84ef305&quot;&gt;&lt;code&gt;downloadAllFiles(...)&lt;/code&gt;&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org84ef305&quot;&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;downloadAllFiles&lt;/span&gt;
    (&lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;remoteDir&lt;/span&gt;
     , &lt;span style=&quot;color: #E5C07B;&quot;&gt;Function&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;OutputStream&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;outputProvider&lt;/span&gt;
     , &lt;span style=&quot;color: #E5C07B;&quot;&gt;Consumer&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;progressReporter&lt;/span&gt;) &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

    &lt;span style=&quot;color: #E5C07B;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;files&lt;/span&gt; = ftp.listFiles(remoteDir.toString());

    &lt;span style=&quot;color: #E5C07B;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;filesList&lt;/span&gt; = Arrays.stream(files)
        .filter(FTPFile::isFile)
        .map(FTPFile::getName)
        .collect(Collectors.toList());

    &lt;span style=&quot;color: #C678DD;&quot;&gt;for&lt;/span&gt;(&lt;span style=&quot;color: #E5C07B;&quot;&gt;int&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;i&lt;/span&gt; = 0; i &amp;lt; filesList.&lt;span style=&quot;color: #E5C07B;&quot;&gt;size&lt;/span&gt;(); i++) {
        progressReporter.accept
            (String.format(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Downloading (%d of %d):[%s]&quot;&lt;/span&gt;
                           , i+1, filesList.size(), filesList.get(i)));

        &lt;span style=&quot;color: #C678DD;&quot;&gt;try&lt;/span&gt; (&lt;span style=&quot;color: #E5C07B;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;out&lt;/span&gt; = outputProvider.apply(Path.of(filesList.get(i)))) {
            ftp.retrieveFile(remoteDir.resolve(filesList.get(i)).toString(), out);
        }
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org9c37ca7&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org9c37ca7&quot;&gt;Example&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org9c37ca7&quot;&gt;
&lt;p&gt;
Here is an example of using the &lt;code&gt;FtpClient&lt;/code&gt; to list and download multiple files form an FTP server.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FtiUtilRun&lt;/span&gt; {
    &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;main&lt;/span&gt;(&lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt;... &lt;span style=&quot;color: #E06C75;&quot;&gt;args&lt;/span&gt;) &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;IOException&lt;/span&gt; {

        &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;create and open connection&lt;/span&gt;
        &lt;span style=&quot;color: #C678DD;&quot;&gt;try&lt;/span&gt; (&lt;span style=&quot;color: #E5C07B;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;ftpClient&lt;/span&gt; = FtpClient.getClient
             (URI.create(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;ftp.ebi.ac.uk&quot;&lt;/span&gt;), &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FTPClient&lt;/span&gt;())){

            &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;remote directory&lt;/span&gt;
            &lt;span style=&quot;color: #E5C07B;&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;remoteDir&lt;/span&gt; = Path.of
                (&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;/pub/databases/opentargets/&quot;&lt;/span&gt; +
                 &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;platform/latest/output/etl/json/diseases/&quot;&lt;/span&gt;);

            &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;print a list of files in a remote directory&lt;/span&gt;
            ftpClient.listFiles(remoteDir)
                .forEach(System.out::println);

            &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;provide output stream to copy a remote file content into&lt;/span&gt;
            &lt;span style=&quot;color: #E5C07B;&quot;&gt;Function&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;Path&lt;/span&gt;, &lt;span style=&quot;color: #E5C07B;&quot;&gt;OutputStream&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;outputProvider&lt;/span&gt; = file -&amp;gt; {
                &lt;span style=&quot;color: #C678DD;&quot;&gt;try&lt;/span&gt; {
                    &lt;span style=&quot;color: #C678DD;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;BufferedOutputStream&lt;/span&gt;
                       (&lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;FileOutputStream&lt;/span&gt;(file.toFile()));
                } &lt;span style=&quot;color: #C678DD;&quot;&gt;catch&lt;/span&gt; (&lt;span style=&quot;color: #E5C07B;&quot;&gt;FileNotFoundException&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;e&lt;/span&gt;) {
                    &lt;span style=&quot;color: #C678DD;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;RuntimeException&lt;/span&gt;
                        (&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;Cannot create files in the local directory...&quot;&lt;/span&gt;,e);
                }
            };

            &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;progress reporter&lt;/span&gt;
            &lt;span style=&quot;color: #E5C07B;&quot;&gt;Consumer&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;progressReporter&lt;/span&gt; = System.out::println;

            &lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;download all files in the directory&lt;/span&gt;
            ftpClient.downloadAllFiles
                (remoteDir, outputProvider, progressReporter);
        }
    }
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Output:
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;-rw-r--r--    1 ftp      ftp             0 Jun 20 12:03 _SUCCESS
-rw-r--r--    1 ftp      ftp       1760417 Jun 20 12:03 part-00000-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp       1699456 Jun 20 12:03 part-00001-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp       1745262 Jun 20 12:03 part-00002-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp       1664693 Jun 20 12:03 part-00003-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp       2135641 Jun 20 12:03 part-00004-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp       2115169 Jun 20 12:03 part-00005-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp       2322320 Jun 20 12:03 part-00006-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp       2165083 Jun 20 12:03 part-00007-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp       1818603 Jun 20 12:03 part-00008-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp       1890536 Jun 20 12:03 part-00009-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp       1806820 Jun 20 12:03 part-00010-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp       2078683 Jun 20 12:03 part-00011-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp        644630 Jun 20 12:03 part-00012-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp        697469 Jun 20 12:03 part-00013-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp        684315 Jun 20 12:03 part-00014-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
-rw-r--r--    1 ftp      ftp        676954 Jun 20 12:03 part-00015-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (1 of 17):[_SUCCESS]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (2 of 17):[part-00000-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (3 of 17):[part-00001-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (4 of 17):[part-00002-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (5 of 17):[part-00003-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (6 of 17):[part-00004-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (7 of 17):[part-00005-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (8 of 17):[part-00006-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (9 of 17):[part-00007-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (10 of 17):[part-00008-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (11 of 17):[part-00009-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (12 of 17):[part-00010-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (13 of 17):[part-00011-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (14 of 17):[part-00012-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (15 of 17):[part-00013-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (16 of 17):[part-00014-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]
&lt;span style=&quot;color: #61AFEF;&quot;&gt;Downloading&lt;/span&gt; (17 of 17):[part-00015-083c466a-3036-42e0-97ab-87035b32cc9b-c000.json]

Process finished with exit code 0

&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;
Thank you.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Using CSS &lt;code&gt;outline&lt;/code&gt; property to visualise the structure of an html page.</title>
   <link href="http://localhost:4000/2022/06/29/css-debugging-html"/>
   <updated>2022-06-29T12:00:03+01:00</updated>
   <id>http://localhost:4000/2022/06/29/css-debugging-html</id>
   <content type="html">&lt;div class=&quot;post&quot;&gt;
&lt;p&gt;
Language: CSS
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org02933f8&quot; class=&quot;outline-2&quot;&gt;
&lt;h3 id=&quot;org02933f8&quot;&gt;Technique&lt;/h3&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org02933f8&quot;&gt;
&lt;p&gt;
To identify discrepancies in placement of html elements you can add &lt;i&gt;CSS&lt;/i&gt; &lt;code&gt;outline&lt;/code&gt; property to make their contours visible as follows.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-css&quot;&gt;&lt;span style=&quot;color: #61AFEF;&quot;&gt;div &lt;/span&gt;{
    &lt;span style=&quot;color: #C678DD;&quot;&gt;outline&lt;/span&gt;: 1px solid &lt;span style=&quot;color: #ffffff; background-color: #0000ff;&quot;&gt;blue&lt;/span&gt;;
}
&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;
Below is an example of using the property to see contours of &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements.
&lt;/p&gt;


&lt;p class=&quot;codepen&quot; data-height=&quot;360&quot; data-default-tab=&quot;html,result&quot; data-slug-hash=&quot;xxWxNEq&quot; data-user=&quot;rustam-isangulov&quot; style=&quot;height: 360px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/rustam-isangulov/pen/xxWxNEq&quot;&gt;
  Outline elements&lt;/a&gt; by Rustam (&lt;a href=&quot;https://codepen.io/rustam-isangulov&quot;&gt;@rustam-isangulov&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async src=&quot;https://cpwebassets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org237cc94&quot; class=&quot;outline-2&quot;&gt;
&lt;h3 id=&quot;org237cc94&quot;&gt;Example&lt;/h3&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org237cc94&quot;&gt;
&lt;p&gt;
Below is an example of using this technique for a blog post &quot;debugging&quot;.
&lt;/p&gt;

&lt;p&gt;
&lt;img src=&quot;/images/CSS-clean.jpg&quot; alt=&quot;CSS-clean.jpg&quot; /&gt;
&lt;img src=&quot;/images/CSS-outline.jpg&quot; alt=&quot;CSS-outline.jpg&quot; /&gt;
&lt;/p&gt;

&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Creating an elementary spring web app and deplying it in a Multipass Docker environment</title>
   <link href="http://localhost:4000/2022/06/27/html-is-possible"/>
   <updated>2022-06-27T12:11:27+01:00</updated>
   <id>http://localhost:4000/2022/06/27/html-is-possible</id>
   <content type="html">&lt;div&gt;
&lt;p&gt;
Toolkit: macOS | &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;InelliJ IDEA&lt;/a&gt; | &lt;a href=&quot;https://www.docker.com/products/docker-desktop/&quot;&gt;Docker Desktop&lt;/a&gt; | &lt;a href=&quot;https://multipass.run&quot;&gt;Multipass&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
Sources: &lt;a href=&quot;https://github.com/rustam-isangulov/spring.io/tree/main/springboot_elementary&quot;&gt;GitHub&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org3319e7d&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org3319e7d&quot;&gt;Review the structure of a static spring web app&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org3319e7d&quot;&gt;

&lt;div id=&quot;org3643a31&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/MVCElementary.png&quot; alt=&quot;MVCElementary.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;



&lt;div id=&quot;orgabea983&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/MVCElementarySeq.png&quot; alt=&quot;MVCElementarySeq.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7b5e7e3&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org7b5e7e3&quot;&gt;Create a basic spring web app&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org7b5e7e3&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org7bb6064&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org7bb6064&quot;&gt;Create spring project with &lt;i&gt;spring initializr&lt;/i&gt;&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org7bb6064&quot;&gt;
&lt;p&gt;
Navigate to &lt;a href=&quot;https:start.spring.io&quot;&gt;https:start.spring.io&lt;/a&gt; and select following options:
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;b&gt;Project&lt;/b&gt;: Maven Project&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Language&lt;/b&gt;: Java&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Spring Boot&lt;/b&gt;: 2.7.1&lt;/li&gt;
&lt;li&gt;Project Metadata:
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;&lt;b&gt;Artifact&lt;/b&gt;: &quot;springboot_ elementary&quot;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Descripton&lt;/b&gt;: &quot;Elementary project for Spring Boot&quot;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Packaging&lt;/b&gt;: Jar&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Java&lt;/b&gt;: 11&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Dependencies&lt;/b&gt;: Spring Web&lt;/li&gt;
&lt;/ul&gt;



&lt;div id=&quot;org4a3bb5d&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/SpringBootElem-Initializr.jpg&quot; alt=&quot;SpringBootElem-Initializr.jpg&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Use &lt;b&gt;&quot;GENERATE&quot;&lt;/b&gt; button to download an archive with the new project. Unzip the archive and move &lt;code&gt;springboot_ elementary&lt;/code&gt; folder to a development area.
&lt;/p&gt;

&lt;p&gt;
Open the new project with &lt;b&gt;&lt;i&gt;IntelliJ&lt;/i&gt;&lt;/b&gt; and let dependencies to be downloaded. Specify run configuration with application name and main class through &lt;code&gt;Run -&amp;gt; Run...&lt;/code&gt; menu as follows.
&lt;/p&gt;


&lt;div id=&quot;org7f41494&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/SpringBootElem-Project.jpg&quot; alt=&quot;SpringBootElem-Project.jpg&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Now you can build and run the app using &lt;b&gt;&lt;i&gt;IntelliJ&lt;/i&gt;&lt;/b&gt;, for example using &lt;code&gt;Run -&amp;gt; Run&lt;/code&gt; or &lt;code&gt;Build -&amp;gt; Build Project&lt;/code&gt; menus.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgdf1c2c6&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgdf1c2c6&quot;&gt;Add controller class&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgdf1c2c6&quot;&gt;
&lt;p&gt;
Create a new package &lt;code&gt;controllers&lt;/code&gt; under &lt;code&gt;com.example.springboot_elementary&lt;/code&gt; folder. Add &lt;code&gt;HomeController&lt;/code&gt; class in this package as follows.
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #56B6C2;&quot;&gt;@Controller&lt;/span&gt;
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;HomeController&lt;/span&gt; {

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@GetMapping&lt;/span&gt;(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;/&quot;&lt;/span&gt;)
    &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;home&lt;/span&gt;() {
        &lt;span style=&quot;color: #C678DD;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #98C379;&quot;&gt;&quot;home.html&quot;&lt;/span&gt;;
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgc969dfc&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgc969dfc&quot;&gt;Add static html source&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgc969dfc&quot;&gt;
&lt;p&gt;
Create a new &lt;code&gt;home.html&lt;/code&gt; file under &lt;code&gt;src/main/resources/static&lt;/code&gt; folder with the following content.
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-html&quot;&gt;&amp;lt;&lt;span style=&quot;color: #C678DD;&quot;&gt;!DOCTYPE&lt;/span&gt; html&amp;gt;
&amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;html&lt;/span&gt; &lt;span style=&quot;color: #D19A66;&quot;&gt;lang&lt;/span&gt;=&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;en&quot;&lt;/span&gt;  &lt;span style=&quot;color: #D19A66;&quot;&gt;xmlns&lt;/span&gt;=&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;http://www.w3.org/1999/xhtml&quot;&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;head&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;meta&lt;/span&gt; &lt;span style=&quot;color: #D19A66;&quot;&gt;charset&lt;/span&gt;=&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;span style=&quot;font-weight: bold; text-decoration: underline;&quot;&gt;Spring web app&lt;/span&gt;&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;title&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;head&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;body&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;span style=&quot;font-weight: bold; font-style: italic; text-decoration: underline;&quot;&gt;Home page for the Spring web app...&lt;/span&gt;&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;h2&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;html&lt;/span&gt;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org35c515b&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org35c515b&quot;&gt;Add controller test class&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org35c515b&quot;&gt;
&lt;p&gt;
Create a new package &lt;code&gt;controllers&lt;/code&gt; in &lt;code&gt;src/test/java/com.example.springboot_elementary&lt;/code&gt;. Add &lt;code&gt;HomeControllerTest&lt;/code&gt; class with content as below.
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-java&quot;&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;// &lt;/span&gt;&lt;span style=&quot;color: #5C6370; font-style: italic;&quot;&gt;additional static imports for MockMvc methods&lt;/span&gt;
&lt;span style=&quot;color: #C678DD;&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #56B6C2;&quot;&gt;org&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;springframework&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;test&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;web&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;servlet&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;request&lt;/span&gt;.MockMvcRequestBuilders.&lt;span style=&quot;color: #E5C07B;&quot;&gt;get&lt;/span&gt;;
&lt;span style=&quot;color: #C678DD;&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #56B6C2;&quot;&gt;org&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;springframework&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;test&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;web&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;servlet&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;result&lt;/span&gt;.&lt;span style=&quot;color: #56B6C2;&quot;&gt;MockMvcResultMatchers&lt;/span&gt;.*;

&lt;span style=&quot;color: #56B6C2;&quot;&gt;@WebMvcTest&lt;/span&gt;(HomeController.&lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt;)
&lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #C678DD;&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;HomeControllerTest&lt;/span&gt; {

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;MockMvc&lt;/span&gt; &lt;span style=&quot;color: #E06C75;&quot;&gt;mockMvc&lt;/span&gt;;

    &lt;span style=&quot;color: #56B6C2;&quot;&gt;@Test&lt;/span&gt;
    &lt;span style=&quot;color: #C678DD;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color: #61AFEF;&quot;&gt;testHomePage&lt;/span&gt;() &lt;span style=&quot;color: #C678DD;&quot;&gt;throws&lt;/span&gt; &lt;span style=&quot;color: #E5C07B;&quot;&gt;Exception&lt;/span&gt; {
        mockMvc.perform(get(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;/&quot;&lt;/span&gt;))
                .andExpect(status().isOk())
                .andExpect(view().name(&lt;span style=&quot;color: #98C379;&quot;&gt;&quot;home.html&quot;&lt;/span&gt;));
    }
}
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org42880a5&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org42880a5&quot;&gt;Run the app locally&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org42880a5&quot;&gt;
&lt;p&gt;
Now you can build and run the app with the final project structure as follows.
&lt;/p&gt;


&lt;div id=&quot;orga404e63&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/SpringBootElem-Structure.jpg&quot; alt=&quot;SpringBootElem-Structure.jpg&quot; width=&quot;300&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Run the app with &lt;b&gt;&lt;i&gt;IntelliJ&lt;/i&gt;&lt;/b&gt; using &lt;code&gt;Run -&amp;gt; Run 'springboot_ elementary'&lt;/code&gt; menu. Open a browser and navigate to &lt;code&gt;localhost:8080&lt;/code&gt; to validate that the app is up and running as in the example below.
&lt;/p&gt;


&lt;div id=&quot;org806250b&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/SpringBootElem-Safari.jpg&quot; alt=&quot;SpringBootElem-Safari.jpg&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org2ebd1c6&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org2ebd1c6&quot;&gt;Deploy the app as a Docker container locally&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org2ebd1c6&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-orgefd0609&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgefd0609&quot;&gt;Review the structure of a local Docker deployment&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgefd0609&quot;&gt;

&lt;div id=&quot;org2d59c32&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/MVCElementaryDockerLocal.png&quot; alt=&quot;MVCElementaryDockerLocal.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id=&quot;outline-container-org198aef6&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org198aef6&quot;&gt;Add image name pattern to maven project configuration&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org198aef6&quot;&gt;
&lt;p&gt;
Add image configuration to &lt;code&gt;spring-boot-maven-plugin&lt;/code&gt; in &lt;code&gt;pom.xml&lt;/code&gt;, and &lt;b&gt;re-Load Maven Changes&lt;/b&gt; as follows.This is to set the name template for docker images.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-html&quot;&gt;&amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;build&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;plugins&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;plugin&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;org.springframework.boot&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;groupId&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;spring-boot-maven-plugin&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;artifactId&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;configuration&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;image&lt;/span&gt;&amp;gt; &amp;lt;&lt;span style=&quot;color: #E06C75;&quot;&gt;name&lt;/span&gt;&amp;gt;${project.artifactId}:${project.version}&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;name&lt;/span&gt;&amp;gt;
        &amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;image&lt;/span&gt;&amp;gt;
      &amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;configuration&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;plugin&lt;/span&gt;&amp;gt;
  &amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;plugins&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&quot;color: #E06C75;&quot;&gt;build&lt;/span&gt;&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org8c1fd5e&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org8c1fd5e&quot;&gt;Create a Docker image&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org8c1fd5e&quot;&gt;
&lt;p&gt;
Launch Docker Desktop app.
&lt;/p&gt;


&lt;div id=&quot;org8733b93&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/SpringBootElem-DockerDesktop.jpg&quot; alt=&quot;SpringBootElem-DockerDesktop.jpg&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
Switch to &lt;code&gt;Terminal&lt;/code&gt; panel in &lt;b&gt;&lt;i&gt;IntelliJ&lt;/i&gt;&lt;/b&gt; through &lt;code&gt;View -&amp;gt; Tool Windows -&amp;gt; Terminal&lt;/code&gt;. Run image building script as follows.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% ./mvnw spring-boot:build-image
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Check that the docker image has been created.
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% docker image list springboot_elementary
REPOSITORY              TAG              IMAGE ID       CREATED        SIZE
springboot_elementary   0.0.1-SNAPSHOT   d24fd8f3e812   42 years ago   262MB
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;i&gt;Note: on the question of '42 years ago' refer here &lt;a href=&quot;https://buildpacks.io/docs/features/reproducibility/&quot;&gt;https://buildpacks.io/docs/features/reproducibility/&lt;/a&gt;&lt;/i&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org89d049f&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org89d049f&quot;&gt;Run the app as a local docker container&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org89d049f&quot;&gt;
&lt;p&gt;
Run the newly created docker image as follows.
&lt;/p&gt;
&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% docker run -p8090:8080 springboot_elementary:0.0.1-SNAPSHOT
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;i&gt;Note: use &lt;code&gt;Ctrl-C&lt;/code&gt; to stop the process inside &lt;code&gt;Terminal&lt;/code&gt; tab.&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;
Validate the app is up and running by navigating to &lt;code&gt;localhost:8090&lt;/code&gt; address in your browser.
&lt;/p&gt;

&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org59ef0e5&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;org59ef0e5&quot;&gt;Deploy the app as a Multipass Docker container&lt;/h2&gt;
&lt;div class=&quot;outline-text-2&quot; id=&quot;text-org59ef0e5&quot;&gt;
&lt;/div&gt;
&lt;div id=&quot;outline-container-org598f4c0&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org598f4c0&quot;&gt;Review the structure of a Multipass Docker deployment&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org598f4c0&quot;&gt;

&lt;div id=&quot;org1f6fe86&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/MVCElementaryDockerMultipass.png&quot; alt=&quot;MVCElementaryDockerMultipass.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgd69aa63&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgd69aa63&quot;&gt;Create Multipass Docker instance&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgd69aa63&quot;&gt;
&lt;p&gt;
Launch Multipass VM with a Docker instance using the following command inside the &lt;code&gt;Terminal&lt;/code&gt; tab.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% multipass launch docker
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Check the running docker instance with the following command. Note instance's IP address.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% multipass info docker
Name:           docker
State:          Running
IPv4:           192.168.64.3
                172.17.0.1
Release:        Ubuntu 21.10
Image hash:     d5ebdea3522c (Ubuntu 21.10)
Load:           0.26 0.62 0.33
Disk usage:     2.4G out of 38.6G
Memory usage:   210.7M out of 3.8G
Mounts:         --
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-orgec47650&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;orgec47650&quot;&gt;Copy docker image to Multipass Docker instance&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-orgec47650&quot;&gt;
&lt;p&gt;
Create a &lt;code&gt;tar&lt;/code&gt; archive of the docker image from local Docker Desktop instance by running the following command.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% docker save -o springboot_elementary.tar springboot_elementary
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Check that the image archive has been created.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% ls *.tar
springboot_elementary.tar
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Transfer the archive to Multipass Docker instance using the command below.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% multipass transfer springboot_elementary.tar docker:/home/ubuntu/springboot_elementary.tar
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Check if the file has been trasferred to a home directory of the multipass docker instance.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% multipass exec docker ls
springboot_elementary.tar
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id=&quot;outline-container-org58b108a&quot; class=&quot;outline-3&quot;&gt;
&lt;h3 id=&quot;org58b108a&quot;&gt;Run the app as a Multipass Docker container&lt;/h3&gt;
&lt;div class=&quot;outline-text-3&quot; id=&quot;text-org58b108a&quot;&gt;
&lt;p&gt;
Open command line inside Multipass Docker image with the following command.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;% multipass shell docker

ubuntu@docker:~$
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;i&gt;Note: to exit from the multipass instance shell and return back to &lt;b&gt;&lt;i&gt;IntelliJ&lt;/i&gt;&lt;/b&gt; &lt;code&gt;Terminal&lt;/code&gt; use &lt;code&gt;exit&lt;/code&gt; command.&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;
Create a docker image from the archive as follows.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;ubuntu@docker:~$ docker load -i springboot_elementary.tar
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Check that the image has been created.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;ubuntu@docker:~$ docker image list
REPOSITORY               TAG              IMAGE ID       CREATED        SIZE
portainer/portainer-ce   latest           7b6e59279c38   6 weeks ago    275MB
springboot_elementary    0.0.1-SNAPSHOT   d24fd8f3e812   42 years ago   262MB
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Now you can run the spring web app as a container inside Multipass VM.
&lt;/p&gt;

&lt;div class=&quot;org-src-container&quot;&gt;
&lt;pre class=&quot;src src-shell&quot;&gt;ubuntu@docker:~$ docker run -p8085:8080 springboot_elementary:0.0.1-SNAPSHOT
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
&lt;i&gt;Note: use &lt;code&gt;Ctrl-C&lt;/code&gt; to stop the process inside the terminal.&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;
Navigate browser to the &lt;code&gt;192.168.64.3:8085&lt;/code&gt; address to validate that the web app is up and running.
&lt;/p&gt;


&lt;div id=&quot;org478b6f3&quot; class=&quot;figure&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/images/SpringBootElem-SafariUbuntu.jpg&quot; alt=&quot;SpringBootElem-SafariUbuntu.jpg&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 

</feed>
